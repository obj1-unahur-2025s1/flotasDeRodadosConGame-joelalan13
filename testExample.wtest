import rodados.*

describe "test de rodados" {

  const deportes = new Dependencia(empleados=45)
  const cultura = new Dependencia(empleados=31)
  const cachito = new Corsa(color="rojo")
  const pedido = new Pedidos(distancia=960,tiempoMaximo=8,cantPasajeros=4)
  method initialize() {
    pedido.colorInvalido("azul")
    pedido.colorInvalido("negro")
    deportes.agregarAFlota(cachito)
    deportes.agregarAFlota(new Corsa(color="azul"))
    deportes.agregarAFlota(new Corsa(color="verde"))
    deportes.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    deportes.agregarAFlota(new Especial(capacidad=5,velocidadMaxima=160,peso=1200,color="beige"))
    cultura.agregarAFlota(cachito)
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=true))
    cultura.agregarAFlota(new Kwid(tieneTanqueAdicional=false))
    cultura.agregarAFlota(trafic)
    trafic.interior(popular)
    trafic.motor(bataton)
  }
  test "deportes tiene peso total 6450" {
    assert.equals(1300+1300+1300+1350+1200,deportes.pesoTotalFlota())
  }

  test "cultura tiene peso total 10700" {
    assert.equals(1300+1350+1350+1200+5500,cultura.pesoTotalFlota())
  }

  test "la flota de deportes esta bien equipada" {
    assert.that(deportes.estaBienEquipada())
  }

  test "la flota de cultura no esta bien equipada" {
    assert.notThat(cultura.estaBienEquipada())
  }

  test "la capacidad total en color azul de deportes es 7" {
    assert.equals(7,deportes.capacidadTotalEnColor("azul"))
  }

  test "cumple cachito pedido"{
    assert.that(pedido.colorCompatible(cachito))
  }

}
