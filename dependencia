import rodados.*

class Dependencias{
    const flota = []
    var property empleados = 0
    method agregarAFlota(unRodado) =
        flota.add(unRodado)
    method quitarDeFlota(unRodado) =
        flota.remove(unRodado)
    method pesoTotalFlota() =
        flota.sum({r => r.peso()})
    method estaBienEquipada() =
        self.tieneAlmenos3Rodados() && self.todosVanAlmenosA100()
    method tieneAlmenos3Rodados(){
           return  flota.size() >= 3 || flota.size() >= 5   
    }
    method todosVanAlmenosA100(){
        return flota.all({r => r.velocidadMaxima() >= 100})
    }
    method capacidadTotalEnColor(unColor) =
        self.rodadosDeColor(unColor).sum({r => r.capacidad()})
   
    method rodadosDeColor(unColor) =
        flota.filter({r => r.color() == unColor})
   
    method colorDelRodadoMasRapido() =
        flota.max({r => r.velocidadMaxima()}).color()
   //method rodadoMasRapido() = flota.max({ r => r.velocidadMaxima()})
    method capacidadFaltante(){
        return (empleados - self.capacidadFlotas()).max(0)
    }
    method capacidadFlotas() =
        flota.sum({r => r.capacidad()})
    method esGrande(){
        return empleados >= 40 && self.capacidadFlotas() == 5 
    }

}
